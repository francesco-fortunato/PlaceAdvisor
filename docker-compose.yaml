version: '3'

services:
    couchdb:
        image: couchdb
        networks:
            - app-network
        environment:
            - COUCHDB_USER=admin
            - COUCHDB_PASSWORD=admin
        volumes:
            - "./couchdb:/opt/couchdb/data"
        ports:
            - 5984:5984
        restart: on-failure
    nodejs:
        build:
            context: ./app
        ports:
            - "8000:8000"
            - "8080:8080"
        depends_on:
            - couchdb
            - rabbitmq
        links:
            - couchdb  
            - rabbitmq
        volumes:
            - ./app:/src/app
        networks:
            - app-network
        restart: on-failure
    rabbitmq:
        image: rabbitmq
        volumes:
            - ./rabbitmq-data:/var/lib/rabbitmq
            - ./rabbitmq-data/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        ports:
            - "5672:5672"
        networks:
            - app-network
        restart: always
    support:
        build:
            context: ./support
        ports:
            - "3000:3000"
        depends_on:
            - couchdb
            - rabbitmq
        links:
            - couchdb
            - rabbitmq
        volumes:
            - ./support:/src/app
        networks:
            - app-network
        restart: on-failure
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
        networks:
            - app-network
        environment:
            - discovery.type=single-node
        ports:
            - "127.0.0.1:9200:9200"
            - "127.0.0.1:9300:9300"
        volumes:
        - ./elasticsearch/data:/usr/share/elasticsearch/data
        restart: always
    kibana:
        image: docker.elastic.co/kibana/kibana:7.17.13
        volumes:
            - ./kibana.yml:/usr/share/kibana/config/kibana.yml
        networks:
            - app-network
        ports:
            - "127.0.0.1:5601:5601"
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch
        restart: always
    logstash:
        image: docker.elastic.co/logstash/logstash:7.17.13
        networks:
            - app-network
        volumes:
            - ./logstash/config:/usr/share/logstash/config
        depends_on:
            - elasticsearch
            - kibana
        restart: on-failure


volumes:
    couchdb-data:
    rabbitmq-data:
    elasticsearch-data:

networks:
    app-network:
        driver: bridge
        
